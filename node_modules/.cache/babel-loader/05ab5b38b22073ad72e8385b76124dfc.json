{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roie0\\\\react-food\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().lenght === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enterdName = nameInputRef.current.value;\n    const enterdStreet = streetInputRef.current.value;\n    const enterdPostalCode = postalCodeInputRef.current.value;\n    const enterdCity = cityInputRef.current.value;\n    const enterdNameIsValid = !isEmpty(enterdName);\n    const enterdStreetIsValid = !isEmpty(enterdStreet);\n    const enterdPostalCodeIsValid = isFiveChars(enterdPostalCode);\n    const enterdCityIsValid = !isEmpty(enterdCity);\n    setFormInputValidity({\n      name: enterdNameIsValid,\n      street: enterdStreetIsValid,\n      city: enterdCityIsValid,\n      postalCode: enterdPostalCodeIsValid\n    });\n    const formIsValid = enterdNameIsValid && enterdStreetIsValid && enterdPostalCodeIsValid && enterdCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"TYVFE3Xyn7YWxc77cR480rfojM0=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/roie0/react-food/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","lenght","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enterdName","current","enterdStreet","enterdPostalCode","enterdCity","enterdNameIsValid","enterdStreetIsValid","enterdPostalCodeIsValid","enterdCityIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef,useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty=value=>value.trim()==='';\r\nconst isFiveChars=value=>value.trim().lenght ===5;\r\n\r\nconst Checkout = (props) => {\r\nconst [formInputValidity,setFormInputValidity]=useState({\r\nname:true,\r\nstreet:true,\r\ncity:true,\r\npostalCode:true\r\n\r\n});\r\n\r\n    const nameInputRef=useRef();\r\n    const streetInputRef=useRef();\r\n    const postalCodeInputRef=useRef();\r\n    const cityInputRef=useRef();\r\n    \r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enterdName=nameInputRef.current.value;\r\n    const enterdStreet=streetInputRef.current.value;\r\n    const enterdPostalCode=postalCodeInputRef.current.value;\r\n    const enterdCity=cityInputRef.current.value;\r\n\r\n    const enterdNameIsValid=!isEmpty(enterdName);\r\n    const enterdStreetIsValid=!isEmpty(enterdStreet);\r\n    const enterdPostalCodeIsValid=isFiveChars(enterdPostalCode);\r\n    const enterdCityIsValid=!isEmpty(enterdCity);\r\n\r\nsetFormInputValidity({\r\n    name:enterdNameIsValid,\r\nstreet:enterdStreetIsValid,\r\ncity:enterdCityIsValid,\r\npostalCode:enterdPostalCodeIsValid\r\n})\r\n\r\n    const formIsValid= enterdNameIsValid &&\r\n     enterdStreetIsValid &&\r\n      enterdPostalCodeIsValid &&\r\n       enterdCityIsValid;\r\n\r\n\r\n\r\n       if (!formIsValid){\r\n          return; \r\n       }\r\n  };\r\n  \r\n  const nameControlClasses=`${classes.control} ${formInputValidity.name? '': classes.invalid}`\r\n  const streetControlClasses=`${classes.control} ${formInputValidity.street? '': classes.invalid}`\r\n  const cityControlClasses=`${classes.control} ${formInputValidity.city? '': classes.invalid}`\r\n  const postalCodeControlClasses=`${classes.control} ${formInputValidity.postalCode? '': classes.invalid}`\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef}/>\r\n        {!formInputValidity.name&& <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formInputValidity.street&& <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\r\n        {!formInputValidity.postalCode&& <p>Please enter a valid postal code (5 characters long)!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef}/>\r\n        {!formInputValidity.city&& <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}