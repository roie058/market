{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roie0\\\\react-food\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from './AvailableMeals.module.css';\nimport MealItem from \"./MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-food-645a1-default-rtdb.europe-west1.firebasedatabase.app/meals');\n\n      if (!response.ok) {\n        throw new Error('Somthing went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AvailableMeals, \"pzdxjHaxPcgzfsxHt2v1NZY454E=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/roie0/react-food/src/components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","styles","MealItem","AvailableMeals","props","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,cAAc,GAAGC,KAAD,IAAS;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,EAAvC;AAGED,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMY,UAAU,GAAC,YAAS;AAE1B,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,+EAAD,CAA1B;;AAEJ,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAiB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAEG,YAAMC,YAAY,GAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAzB;AAEJ,YAAMC,WAAW,GAAC,EAAlB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAACF,GADY;AAEfG,UAAAA,IAAI,EAACN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFR;AAGfC,UAAAA,WAAW,EAACP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHf;AAIfC,UAAAA,KAAK,EAACR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACG,KAtBC;;AAwBCG,IAAAA,UAAU,GAAGc,KAAb,CAAmBC,KAAK,IAAE;AACzBlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACA,KAHD;AAOF,GAhCQ,EAgCP,EAhCO,CAAT;;AAkCF,MAAIpB,SAAJ,EAAc;AACZ,wBACE;AAAS,MAAA,SAAS,EAAEN,MAAM,CAAC2B,YAA3B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAInB,SAAJ,EAAc;AACZ,wBACE;AAAS,MAAA,SAAS,EAAER,MAAM,CAAC4B,UAA3B;AAAA,6BACE;AAAA,kBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMqB,SAAS,GAACzB,KAAK,CAAC0B,GAAN,CAAUC,IAAI,iBAC5B,QAAC,QAAD;AACA,IAAA,EAAE,EAAEA,IAAI,CAACX,EADT;AAGA,IAAA,IAAI,EAAEW,IAAI,CAACV,IAHX;AAIC,IAAA,WAAW,EAAEU,IAAI,CAACT,WAJnB;AAKC,IAAA,KAAK,EAAES,IAAI,CAACR;AALb,KAEKQ,IAAI,CAACX,EAFV;AAAA;AAAA;AAAA;AAAA,UADc,CAAhB;AAWI,sBACF;AAAS,IAAA,SAAS,EAAEpB,MAAM,CAACI,KAA3B;AAAA,2BACG;AAAA,gBAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADE;AAID,CAvEH;;GAAM3B,c;;KAAAA,c;AAyEN,eAAeA,cAAf","sourcesContent":["import React,{useEffect, useState} from \"react\";\r\nimport styles from './AvailableMeals.module.css'\r\nimport MealItem from \"./MealItem\";\r\n\r\nconst AvailableMeals =(props)=>{\r\nconst [meals,setMeals]=useState([]);\r\nconst [isLoading,setIsLoading]=useState(true);\r\nconst [httpError,setHttpError]=useState();\r\n\r\n\r\n  useEffect(()=>{\r\n    const fetchMeals=async()=>{\r\n      \r\n    const response=await fetch('https://react-food-645a1-default-rtdb.europe-west1.firebasedatabase.app/meals');\r\n   \r\nif (!response.ok){\r\n throw new Error('Somthing went wrong!'); \r\n}\r\n\r\n    const responseData=await response.json();\r\n  \r\nconst loadedMeals=[];\r\n\r\nfor (const key in responseData) {\r\n  loadedMeals.push({\r\n    id:key,\r\n    name:responseData[key].name,\r\n    description:responseData[key].description,\r\n    price:responseData[key].price\r\n  });\r\n}\r\nsetMeals(loadedMeals)\r\nsetIsLoading(false);\r\n  }\r\n\r\n     fetchMeals().catch(error=>{\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n     });\r\n  \r\n    \r\n    \r\n  },[])\r\n\r\nif (isLoading){\r\n  return(\r\n    <section className={styles.MealsLoading}>\r\n      <p>Loading...</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nif (httpError){\r\n  return(\r\n    <section className={styles.MealsError}>\r\n      <p>{httpError}</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mealsList=meals.map(meal=>(\r\n  <MealItem\r\n  id={meal.id}\r\n  key={meal.id}\r\n  name={meal.name}\r\n   description={meal.description}\r\n   price={meal.price}\r\n   \r\n   /> \r\n ))\r\n\r\n    return(\r\n  <section className={styles.meals}>\r\n     <ul>{mealsList}</ul>\r\n</section>\r\n);};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}