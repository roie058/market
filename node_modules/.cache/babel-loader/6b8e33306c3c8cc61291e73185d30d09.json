{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roie0\\\\react-food\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exsitingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (exsitingCartItem) {\n      const updatedItem = { ...exsitingCartItem,\n        amount: exsitingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const exsitingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - exsitingCartItem.price;\n    let updatedItems;\n\n    if (exsitingCartItem.amount === 1) {\n      const updatedItems = state.items.filter(items => {\n        item.id !== action.id;\n      });\n    } else {\n      const updatedItem = { ...exsitingCartItem,\n        amount: exsitingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/roie0/react-food/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","exsitingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nconst cartReducer=(state,action)=>{\r\n    if(action.type==='ADD'){\r\n        const updatedTotalAmount=state.totalAmount+action.item.price * action.item.amount;\r\n\r\nconst existingCartItemIndex=state.items.findIndex(item=> item.id===action.item.id);\r\n     const exsitingCartItem=state.items[existingCartItemIndex];\r\n     \r\n     let updatedItems;\r\n\r\n     if(exsitingCartItem){\r\n         const updatedItem={\r\n           ...exsitingCartItem  ,\r\n           amount:exsitingCartItem.amount+action.item.amount\r\n\r\n         };\r\n         updatedItems=[...state.items];\r\n         updatedItems[existingCartItemIndex]=updatedItem\r\n     }else{\r\n    \r\n         updatedItems=state.items.concat(action.item);\r\n     }\r\n\r\n\r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        }\r\n    }\r\n   \r\n    if(action.type==='REMOVE'){\r\n        \r\n        const existingCartItemIndex=state.items.findIndex(\r\n            item=>item.id===action.id);\r\n            const exsitingCartItem=state.items[existingCartItemIndex];\r\n            const updatedTotalAmount=state.totalAmount - exsitingCartItem.price\r\n       let updatedItems;\r\n       if(exsitingCartItem.amount===1){\r\n   const updatedItems=state.items.filter(items=>{item.id!==action.id})\r\n       }else{\r\nconst updatedItem={...exsitingCartItem,amount:exsitingCartItem.amount-1};\r\nupdatedItems=[...state.items];\r\nupdatedItems[existingCartItemIndex]=updatedItem;\r\n       }\r\n       return{\r\n           items:updatedItems,\r\n           totalAmount:updatedTotalAmount\r\n       }\r\n        }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider=(props)=>{\r\nconst [cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartState);\r\n\r\nconst addItemToCartHandler=(item)=>{\r\ndispatchCartAction({type:'ADD',item:item});\r\n};\r\n\r\nconst removeItemFromCartHandler=(id)=>{\r\n    dispatchCartAction({type:'REMOVE',id:id});\r\n};\r\n\r\nconst cartContext={\r\n    items:cartState.items,\r\n    totalAmount:cartState.totalAmount,\r\n    addItem:addItemToCartHandler,\r\n    removeItem:removeItemFromCartHandler \r\n};\r\n\r\nreturn <CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n};\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}